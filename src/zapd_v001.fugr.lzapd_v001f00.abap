*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 31.03.2021 at 13:46:52
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZAPD_V001.......................................*
FORM GET_DATA_ZAPD_V001.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZAPD_T001 WHERE
(VIM_WHERETAB) .
    CLEAR ZAPD_V001 .
ZAPD_V001-MANDT =
ZAPD_T001-MANDT .
ZAPD_V001-APP =
ZAPD_T001-APP .
ZAPD_V001-ACTIVO =
ZAPD_T001-ACTIVO .
ZAPD_V001-ORDEN =
ZAPD_T001-ORDEN .
ZAPD_V001-CLS_CONTROL =
ZAPD_T001-CLASE .
ZAPD_V001-ICONO =
ZAPD_T001-ICONO .
    SELECT SINGLE * FROM ZAPD_T001T WHERE
APP = ZAPD_T001-APP AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZAPD_V001-DESCRIPCION =
ZAPD_T001T-DESCRIPCION .
    ENDIF.
<VIM_TOTAL_STRUC> = ZAPD_V001.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZAPD_V001 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZAPD_V001.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZAPD_V001-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZAPD_T001 WHERE
  APP = ZAPD_V001-APP .
    IF SY-SUBRC = 0.
    DELETE ZAPD_T001 .
    ENDIF.
    DELETE FROM ZAPD_T001T WHERE
    APP = ZAPD_T001-APP .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZAPD_T001 WHERE
  APP = ZAPD_V001-APP .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZAPD_T001.
    ENDIF.
ZAPD_T001-MANDT =
ZAPD_V001-MANDT .
ZAPD_T001-APP =
ZAPD_V001-APP .
ZAPD_T001-ACTIVO =
ZAPD_V001-ACTIVO .
ZAPD_T001-ORDEN =
ZAPD_V001-ORDEN .
ZAPD_T001-CLASE =
ZAPD_V001-CLS_CONTROL .
ZAPD_T001-ICONO =
ZAPD_V001-ICONO .
    IF SY-SUBRC = 0.
    UPDATE ZAPD_T001 ##WARN_OK.
    ELSE.
    INSERT ZAPD_T001 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZAPD_T001T WHERE
    APP = ZAPD_T001-APP AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZAPD_T001T.
ZAPD_T001T-APP =
ZAPD_T001-APP .
ZAPD_T001T-SPRAS =
SY-LANGU .
      ENDIF.
ZAPD_T001T-DESCRIPCION =
ZAPD_V001-DESCRIPCION .
    IF SY-SUBRC = 0.
    UPDATE ZAPD_T001T ##WARN_OK.
    ELSE.
    INSERT ZAPD_T001T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZAPD_V001-UPD_FLAG,
STATUS_ZAPD_V001-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZAPD_V001.
  SELECT SINGLE * FROM ZAPD_T001 WHERE
APP = ZAPD_V001-APP .
ZAPD_V001-MANDT =
ZAPD_T001-MANDT .
ZAPD_V001-APP =
ZAPD_T001-APP .
ZAPD_V001-ACTIVO =
ZAPD_T001-ACTIVO .
ZAPD_V001-ORDEN =
ZAPD_T001-ORDEN .
ZAPD_V001-CLS_CONTROL =
ZAPD_T001-CLASE .
ZAPD_V001-ICONO =
ZAPD_T001-ICONO .
    SELECT SINGLE * FROM ZAPD_T001T WHERE
APP = ZAPD_T001-APP AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZAPD_V001-DESCRIPCION =
ZAPD_T001T-DESCRIPCION .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZAPD_V001-DESCRIPCION .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZAPD_V001 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZAPD_V001-APP TO
ZAPD_T001-APP .
MOVE ZAPD_V001-MANDT TO
ZAPD_T001-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZAPD_T001'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZAPD_T001 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZAPD_T001'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZAPD_T001-APP TO
ZAPD_T001T-APP .
MOVE SY-LANGU TO
ZAPD_T001T-SPRAS .
MOVE ZAPD_V001-MANDT TO
ZAPD_T001T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZAPD_T001T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZAPD_T001T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZAPD_T001T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
